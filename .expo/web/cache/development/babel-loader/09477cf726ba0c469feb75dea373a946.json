{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _slicedToArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/slicedToArray\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _reactNative = require(\"react-native\");\nvar _State = require(\"../../State\");\nvar _interfaces = require(\"../interfaces\");\nvar _GestureHandlerOrchestrator = _interopRequireDefault(require(\"../tools/GestureHandlerOrchestrator\"));\nvar _InteractionManager = _interopRequireDefault(require(\"../tools/InteractionManager\"));\nvar _PointerEventManager = _interopRequireDefault(require(\"../tools/PointerEventManager\"));\nvar _PointerTracker = _interopRequireDefault(require(\"../tools/PointerTracker\"));\nvar _TouchEventManager = _interopRequireDefault(require(\"../tools/TouchEventManager\"));\nvar _utils = require(\"../utils\");\nvar _excluded = [\"enabled\"];\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\n\nvar GestureHandler = function () {\n  function GestureHandler() {\n    var _this = this;\n    (0, _classCallCheck2.default)(this, GestureHandler);\n    _defineProperty(this, \"lastSentState\", null);\n    _defineProperty(this, \"currentState\", _State.State.UNDETERMINED);\n    _defineProperty(this, \"shouldCancellWhenOutside\", false);\n    _defineProperty(this, \"hasCustomActivationCriteria\", void 0);\n    _defineProperty(this, \"enabled\", false);\n    _defineProperty(this, \"ref\", void 0);\n    _defineProperty(this, \"propsRef\", void 0);\n    _defineProperty(this, \"handlerTag\", void 0);\n    _defineProperty(this, \"config\", {\n      enabled: false\n    });\n    _defineProperty(this, \"view\", void 0);\n    _defineProperty(this, \"eventManagers\", []);\n    _defineProperty(this, \"tracker\", new _PointerTracker.default());\n    _defineProperty(this, \"activationIndex\", 0);\n    _defineProperty(this, \"awaiting\", false);\n    _defineProperty(this, \"active\", false);\n    _defineProperty(this, \"shouldResetProgress\", false);\n    _defineProperty(this, \"pointerType\", _interfaces.PointerType.NONE);\n    _defineProperty(this, \"sendEvent\", function (newState, oldState) {\n      var _this$propsRef$curren = _this.propsRef.current,\n        onGestureHandlerEvent = _this$propsRef$curren.onGestureHandlerEvent,\n        onGestureHandlerStateChange = _this$propsRef$curren.onGestureHandlerStateChange;\n      var resultEvent = _this.transformEventData(newState, oldState);\n\n      if (_this.lastSentState !== newState) {\n        _this.lastSentState = newState;\n        invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n      }\n      if (_this.currentState === _State.State.ACTIVE) {\n        resultEvent.nativeEvent.oldState = undefined;\n        invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n      }\n    });\n    this.hasCustomActivationCriteria = false;\n  }\n  (0, _createClass2.default)(GestureHandler, [{\n    key: \"init\",\n    value:\n\n    function init(ref, propsRef) {\n      this.propsRef = propsRef;\n      this.ref = ref;\n      this.currentState = _State.State.UNDETERMINED;\n      this.setView();\n      this.addEventManager(new _PointerEventManager.default(this.view));\n      this.addEventManager(new _TouchEventManager.default(this.view));\n    }\n  }, {\n    key: \"setView\",\n    value: function setView() {\n      if (!this.ref) {\n        throw new Error(\"Cannot find HTML Element for handler \" + this.handlerTag);\n      }\n      this.view = (0, _reactNative.findNodeHandle)(this.ref);\n      this.view.style['touchAction'] = 'none';\n      this.view.style['webkitUserSelect'] = 'none';\n      this.view.style['userSelect'] = 'none';\n\n      this.view.style['WebkitTouchCallout'] = 'none';\n    }\n  }, {\n    key: \"addEventManager\",\n    value: function addEventManager(manager) {\n      manager.setOnPointerDown(this.onPointerDown.bind(this));\n      manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n      manager.setOnPointerUp(this.onPointerUp.bind(this));\n      manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n      manager.setOnPointerMove(this.onPointerMove.bind(this));\n      manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n      manager.setOnPointerOut(this.onPointerOut.bind(this));\n      manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n      manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n      manager.setListeners();\n      this.eventManagers.push(manager);\n    }\n  }, {\n    key: \"onCancel\",\n    value:\n\n    function onCancel() {}\n  }, {\n    key: \"onReset\",\n    value: function onReset() {}\n  }, {\n    key: \"resetProgress\",\n    value: function resetProgress() {}\n  }, {\n    key: \"reset\",\n    value: function reset() {\n      this.tracker.resetTracker();\n      this.onReset();\n      this.resetProgress();\n      this.eventManagers.forEach(function (manager) {\n        return manager.resetManager();\n      });\n      this.currentState = _State.State.UNDETERMINED;\n    }\n  }, {\n    key: \"moveToState\",\n    value:\n\n    function moveToState(newState, sendIfDisabled) {\n      if (this.currentState === newState) {\n        return;\n      }\n      var oldState = this.currentState;\n      this.currentState = newState;\n      _GestureHandlerOrchestrator.default.getInstance().onHandlerStateChange(this, newState, oldState, sendIfDisabled);\n      this.onStateChange(newState, oldState);\n    }\n  }, {\n    key: \"onStateChange\",\n    value: function onStateChange(_newState, _oldState) {}\n  }, {\n    key: \"begin\",\n    value: function begin() {\n      if (!this.checkHitSlop()) {\n        return;\n      }\n      if (this.currentState === _State.State.UNDETERMINED) {\n        this.moveToState(_State.State.BEGAN);\n      }\n    }\n  }, {\n    key: \"fail\",\n    value:\n\n    function fail(sendIfDisabled) {\n      if (this.currentState === _State.State.ACTIVE || this.currentState === _State.State.BEGAN) {\n        this.moveToState(_State.State.FAILED, sendIfDisabled);\n        this.view.style.cursor = 'auto';\n      }\n      this.resetProgress();\n    }\n  }, {\n    key: \"cancel\",\n    value:\n\n    function cancel(sendIfDisabled) {\n      if (this.currentState === _State.State.ACTIVE || this.currentState === _State.State.UNDETERMINED || this.currentState === _State.State.BEGAN) {\n        this.onCancel();\n        this.moveToState(_State.State.CANCELLED, sendIfDisabled);\n        this.view.style.cursor = 'auto';\n      }\n    }\n  }, {\n    key: \"activate\",\n    value: function activate() {\n      var _force = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n      if (this.currentState === _State.State.UNDETERMINED || this.currentState === _State.State.BEGAN) {\n        this.moveToState(_State.State.ACTIVE);\n        this.view.style.cursor = 'grab';\n      }\n    }\n  }, {\n    key: \"end\",\n    value: function end() {\n      if (this.currentState === _State.State.BEGAN || this.currentState === _State.State.ACTIVE) {\n        this.moveToState(_State.State.END);\n        this.view.style.cursor = 'auto';\n      }\n      this.resetProgress();\n    }\n  }, {\n    key: \"isAwaiting\",\n    value:\n\n    function isAwaiting() {\n      return this.awaiting;\n    }\n  }, {\n    key: \"setAwaiting\",\n    value: function setAwaiting(value) {\n      this.awaiting = value;\n    }\n  }, {\n    key: \"isActive\",\n    value: function isActive() {\n      return this.active;\n    }\n  }, {\n    key: \"setActive\",\n    value: function setActive(value) {\n      this.active = value;\n    }\n  }, {\n    key: \"getShouldResetProgress\",\n    value: function getShouldResetProgress() {\n      return this.shouldResetProgress;\n    }\n  }, {\n    key: \"setShouldResetProgress\",\n    value: function setShouldResetProgress(value) {\n      this.shouldResetProgress = value;\n    }\n  }, {\n    key: \"getActivationIndex\",\n    value: function getActivationIndex() {\n      return this.activationIndex;\n    }\n  }, {\n    key: \"setActivationIndex\",\n    value: function setActivationIndex(value) {\n      this.activationIndex = value;\n    }\n  }, {\n    key: \"shouldWaitForHandlerFailure\",\n    value: function shouldWaitForHandlerFailure(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return _InteractionManager.default.getInstance().shouldWaitForHandlerFailure(this, handler);\n    }\n  }, {\n    key: \"shouldRequireToWaitForFailure\",\n    value: function shouldRequireToWaitForFailure(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return _InteractionManager.default.getInstance().shouldRequireHandlerToWaitForFailure(this, handler);\n    }\n  }, {\n    key: \"shouldRecognizeSimultaneously\",\n    value: function shouldRecognizeSimultaneously(handler) {\n      if (handler === this) {\n        return true;\n      }\n      return _InteractionManager.default.getInstance().shouldRecognizeSimultaneously(this, handler);\n    }\n  }, {\n    key: \"shouldBeCancelledByOther\",\n    value: function shouldBeCancelledByOther(handler) {\n      if (handler === this) {\n        return false;\n      }\n      return _InteractionManager.default.getInstance().shouldHandlerBeCancelledBy(this, handler);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value:\n\n    function onPointerDown(event) {\n      _GestureHandlerOrchestrator.default.getInstance().recordHandlerIfNotPresent(this);\n      this.pointerType = event.pointerType;\n      if (this.pointerType === _interfaces.PointerType.TOUCH) {\n        _GestureHandlerOrchestrator.default.getInstance().cancelMouseAndPenGestures(this);\n      }\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerAdd\",\n    value:\n\n    function onPointerAdd(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerRemove\",\n    value:\n\n    function onPointerRemove(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      this.tryToSendMoveEvent(false);\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerOut\",\n    value: function onPointerOut(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerEnter\",\n    value: function onPointerEnter(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerCancel\",\n    value: function onPointerCancel(event) {\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"onPointerOutOfBounds\",\n    value: function onPointerOutOfBounds(event) {\n      this.tryToSendMoveEvent(true);\n      if (this.config.needsPointerData) {\n        this.sendTouchEvent(event);\n      }\n    }\n  }, {\n    key: \"tryToSendMoveEvent\",\n    value: function tryToSendMoveEvent(out) {\n      if (this.enabled && this.active && (!out || out && !this.shouldCancellWhenOutside)) {\n        this.sendEvent(this.currentState, this.currentState);\n      }\n    }\n  }, {\n    key: \"sendTouchEvent\",\n    value: function sendTouchEvent(event) {\n      if (!this.enabled) {\n        return;\n      }\n      var onGestureHandlerEvent = this.propsRef.current.onGestureHandlerEvent;\n      var touchEvent = this.transformTouchEvent(event);\n      if (touchEvent) {\n        invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n      }\n    }\n  }, {\n    key: \"transformEventData\",\n    value:\n\n    function transformEventData(newState, oldState) {\n      return {\n        nativeEvent: (0, _extends2.default)({\n          numberOfPointers: this.tracker.getTrackedPointersCount(),\n          state: newState,\n          pointerInside: (0, _utils.isPointerInBounds)(this.view, {\n            x: this.tracker.getLastAvgX(),\n            y: this.tracker.getLastAvgY()\n          })\n        }, this.transformNativeEvent(), {\n          handlerTag: this.handlerTag,\n          target: this.ref,\n          oldState: newState !== oldState ? oldState : undefined\n        }),\n        timeStamp: Date.now()\n      };\n    }\n  }, {\n    key: \"transformTouchEvent\",\n    value: function transformTouchEvent(event) {\n      var _this2 = this;\n      var _event$touchEventType;\n      var rect = this.view.getBoundingClientRect();\n      var all = [];\n      var changed = [];\n      var trackerData = this.tracker.getData();\n\n      if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n        return;\n      }\n      trackerData.forEach(function (element, key) {\n        var id = _this2.tracker.getMappedTouchEventId(key);\n        all.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY\n        });\n      });\n\n      if (event.eventType !== _interfaces.EventTypes.CANCEL) {\n        changed.push({\n          id: this.tracker.getMappedTouchEventId(event.pointerId),\n          x: event.x - rect.left,\n          y: event.y - rect.top,\n          absoluteX: event.x,\n          absoluteY: event.y\n        });\n      } else {\n        trackerData.forEach(function (element, key) {\n          var id = _this2.tracker.getMappedTouchEventId(key);\n          changed.push({\n            id: id,\n            x: element.lastX - rect.left,\n            y: element.lastY - rect.top,\n            absoluteX: element.lastX,\n            absoluteY: element.lastY\n          });\n        });\n      }\n      var eventType = _interfaces.TouchEventType.UNDETERMINED;\n      switch (event.eventType) {\n        case _interfaces.EventTypes.DOWN:\n        case _interfaces.EventTypes.ADDITIONAL_POINTER_DOWN:\n          eventType = _interfaces.TouchEventType.DOWN;\n          break;\n        case _interfaces.EventTypes.UP:\n        case _interfaces.EventTypes.ADDITIONAL_POINTER_UP:\n          eventType = _interfaces.TouchEventType.UP;\n          break;\n        case _interfaces.EventTypes.MOVE:\n          eventType = _interfaces.TouchEventType.MOVE;\n          break;\n        case _interfaces.EventTypes.CANCEL:\n          eventType = _interfaces.TouchEventType.CANCELLED;\n          break;\n      }\n\n      var numberOfTouches = all.length;\n      if (event.eventType === _interfaces.EventTypes.UP || event.eventType === _interfaces.EventTypes.ADDITIONAL_POINTER_UP) {\n        --numberOfTouches;\n      }\n      return {\n        nativeEvent: {\n          handlerTag: this.handlerTag,\n          state: this.currentState,\n          eventType: (_event$touchEventType = event.touchEventType) !== null && _event$touchEventType !== void 0 ? _event$touchEventType : eventType,\n          changedTouches: changed,\n          allTouches: all,\n          numberOfTouches: numberOfTouches\n        },\n        timeStamp: Date.now()\n      };\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      return {};\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value:\n\n    function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n      this.config = (0, _extends2.default)({\n        enabled: enabled\n      }, props);\n      this.enabled = enabled;\n      this.validateHitSlops();\n      if (this.enabled) {\n        return;\n      }\n      switch (this.currentState) {\n        case _State.State.ACTIVE:\n          this.fail(true);\n          break;\n        case _State.State.UNDETERMINED:\n          _GestureHandlerOrchestrator.default.getInstance().removeHandlerFromOrchestrator(this);\n          break;\n        default:\n          this.cancel(true);\n          break;\n      }\n    }\n  }, {\n    key: \"checkCustomActivationCriteria\",\n    value: function checkCustomActivationCriteria(criterias) {\n      for (var key in this.config) {\n        if (criterias.indexOf(key) >= 0) {\n          this.hasCustomActivationCriteria = true;\n        }\n      }\n    }\n  }, {\n    key: \"validateHitSlops\",\n    value: function validateHitSlops() {\n      if (!this.config.hitSlop) {\n        return;\n      }\n      if (this.config.hitSlop.left !== undefined && this.config.hitSlop.right !== undefined && this.config.hitSlop.width !== undefined) {\n        throw new Error('HitSlop Error: Cannot define left, right and width at the same time');\n      }\n      if (this.config.hitSlop.width !== undefined && this.config.hitSlop.left === undefined && this.config.hitSlop.right === undefined) {\n        throw new Error('HitSlop Error: When width is defined, either left or right has to be defined');\n      }\n      if (this.config.hitSlop.height !== undefined && this.config.hitSlop.top !== undefined && this.config.hitSlop.bottom !== undefined) {\n        throw new Error('HitSlop Error: Cannot define top, bottom and height at the same time');\n      }\n      if (this.config.hitSlop.height !== undefined && this.config.hitSlop.top === undefined && this.config.hitSlop.bottom === undefined) {\n        throw new Error('HitSlop Error: When height is defined, either top or bottom has to be defined');\n      }\n    }\n  }, {\n    key: \"checkHitSlop\",\n    value: function checkHitSlop() {\n      if (!this.config.hitSlop) {\n        return true;\n      }\n      var width = this.view.getBoundingClientRect().width;\n      var height = this.view.getBoundingClientRect().height;\n      var left = 0;\n      var top = 0;\n      var right = width;\n      var bottom = height;\n      if (this.config.hitSlop.horizontal !== undefined) {\n        left -= this.config.hitSlop.horizontal;\n        right += this.config.hitSlop.horizontal;\n      }\n      if (this.config.hitSlop.vertical !== undefined) {\n        top -= this.config.hitSlop.vertical;\n        bottom += this.config.hitSlop.vertical;\n      }\n      if (this.config.hitSlop.left !== undefined) {\n        left = -this.config.hitSlop.left;\n      }\n      if (this.config.hitSlop.right !== undefined) {\n        right = width + this.config.hitSlop.right;\n      }\n      if (this.config.hitSlop.top !== undefined) {\n        top = -this.config.hitSlop.top;\n      }\n      if (this.config.hitSlop.bottom !== undefined) {\n        bottom = width + this.config.hitSlop.bottom;\n      }\n      if (this.config.hitSlop.width !== undefined) {\n        if (this.config.hitSlop.left !== undefined) {\n          right = left + this.config.hitSlop.width;\n        } else if (this.config.hitSlop.right !== undefined) {\n          left = right - this.config.hitSlop.width;\n        }\n      }\n      if (this.config.hitSlop.height !== undefined) {\n        if (this.config.hitSlop.top !== undefined) {\n          bottom = top + this.config.hitSlop.height;\n        } else if (this.config.hitSlop.bottom !== undefined) {\n          top = bottom - this.config.hitSlop.height;\n        }\n      }\n      var rect = this.view.getBoundingClientRect();\n      var offsetX = this.tracker.getLastX() - rect.left;\n      var offsetY = this.tracker.getLastY() - rect.top;\n      if (offsetX >= left && offsetX <= right && offsetY >= top && offsetY <= bottom) {\n        return true;\n      }\n      return false;\n    }\n  }, {\n    key: \"isPointerInBounds\",\n    value: function isPointerInBounds(_ref2) {\n      var x = _ref2.x,\n        y = _ref2.y;\n      var rect = this.view.getBoundingClientRect();\n      return x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom;\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {}\n  }, {\n    key: \"getTag\",\n    value:\n\n    function getTag() {\n      return this.handlerTag;\n    }\n  }, {\n    key: \"setTag\",\n    value: function setTag(tag) {\n      this.handlerTag = tag;\n    }\n  }, {\n    key: \"getConfig\",\n    value: function getConfig() {\n      return this.config;\n    }\n  }, {\n    key: \"getShouldEnableGestureOnSetup\",\n    value: function getShouldEnableGestureOnSetup() {\n      throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n    }\n  }, {\n    key: \"getView\",\n    value: function getView() {\n      return this.view;\n    }\n  }, {\n    key: \"getEventManagers\",\n    value: function getEventManagers() {\n      return this.eventManagers;\n    }\n  }, {\n    key: \"getTracker\",\n    value: function getTracker() {\n      return this.tracker;\n    }\n  }, {\n    key: \"getTrackedPointersID\",\n    value: function getTrackedPointersID() {\n      return this.tracker.getTrackedPointersID();\n    }\n  }, {\n    key: \"getState\",\n    value: function getState() {\n      return this.currentState;\n    }\n  }, {\n    key: \"isEnabled\",\n    value: function isEnabled() {\n      return this.enabled;\n    }\n  }, {\n    key: \"setShouldCancelWhenOutside\",\n    value: function setShouldCancelWhenOutside(shouldCancel) {\n      this.shouldCancellWhenOutside = shouldCancel;\n    }\n  }, {\n    key: \"getShouldCancelWhenOutside\",\n    value: function getShouldCancelWhenOutside() {\n      return this.shouldCancellWhenOutside;\n    }\n  }, {\n    key: \"getPointerType\",\n    value: function getPointerType() {\n      return this.pointerType;\n    }\n  }]);\n  return GestureHandler;\n}();\nexports.default = GestureHandler;\nfunction invokeNullableMethod(method, event) {\n  if (!method) {\n    return;\n  }\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    var handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n  var argMapping = method.__nodeConfig.argMapping;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n  for (var _iterator = _createForOfIteratorHelperLoose(argMapping.entries()), _step; !(_step = _iterator()).done;) {\n    var _ref3 = _step.value;\n    var _ref4 = (0, _slicedToArray2.default)(_ref3, 2);\n    var index = _ref4[0];\n    var _ref4$ = (0, _slicedToArray2.default)(_ref4[1], 2);\n    var key = _ref4$[0];\n    var value = _ref4$[1];\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    var nativeValue = event.nativeEvent[key];\n\n    if (value !== null && value !== void 0 && value.setValue) {\n      value.setValue(nativeValue);\n    } else {\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n  return;\n}","map":{"version":3,"sources":["GestureHandler.ts"],"names":["GestureHandler","State","UNDETERMINED","enabled","PointerTracker","PointerType","NONE","constructor","hasCustomActivationCriteria","init","ref","propsRef","currentState","setView","addEventManager","PointerEventManager","view","TouchEventManager","Error","handlerTag","findNodeHandle","style","manager","setOnPointerDown","onPointerDown","bind","setOnPointerAdd","onPointerAdd","setOnPointerUp","onPointerUp","setOnPointerRemove","onPointerRemove","setOnPointerMove","onPointerMove","setOnPointerEnter","onPointerEnter","setOnPointerOut","onPointerOut","setOnPointerCancel","onPointerCancel","setOnPointerOutOfBounds","onPointerOutOfBounds","setListeners","eventManagers","push","onCancel","onReset","resetProgress","reset","tracker","resetTracker","forEach","resetManager","moveToState","newState","sendIfDisabled","oldState","GestureHandlerOrchestrator","getInstance","onHandlerStateChange","onStateChange","_newState","_oldState","begin","checkHitSlop","BEGAN","fail","ACTIVE","FAILED","cursor","cancel","CANCELLED","activate","_force","end","END","isAwaiting","awaiting","setAwaiting","value","isActive","active","setActive","getShouldResetProgress","shouldResetProgress","setShouldResetProgress","getActivationIndex","activationIndex","setActivationIndex","shouldWaitForHandlerFailure","handler","InteractionManager","shouldRequireToWaitForFailure","shouldRequireHandlerToWaitForFailure","shouldRecognizeSimultaneously","shouldBeCancelledByOther","shouldHandlerBeCancelledBy","event","recordHandlerIfNotPresent","pointerType","TOUCH","cancelMouseAndPenGestures","config","needsPointerData","sendTouchEvent","tryToSendMoveEvent","out","shouldCancellWhenOutside","sendEvent","onGestureHandlerEvent","current","touchEvent","transformTouchEvent","invokeNullableMethod","onGestureHandlerStateChange","resultEvent","transformEventData","lastSentState","nativeEvent","undefined","numberOfPointers","getTrackedPointersCount","state","pointerInside","isPointerInBounds","x","getLastAvgX","y","getLastAvgY","transformNativeEvent","target","timeStamp","Date","now","rect","getBoundingClientRect","all","changed","trackerData","getData","size","has","pointerId","element","key","id","getMappedTouchEventId","lastX","left","lastY","top","absoluteX","absoluteY","eventType","EventTypes","CANCEL","TouchEventType","DOWN","ADDITIONAL_POINTER_DOWN","UP","ADDITIONAL_POINTER_UP","MOVE","numberOfTouches","length","touchEventType","changedTouches","allTouches","updateGestureConfig","props","validateHitSlops","removeHandlerFromOrchestrator","checkCustomActivationCriteria","criterias","indexOf","hitSlop","right","width","height","bottom","horizontal","vertical","offsetX","getLastX","offsetY","getLastY","resetConfig","getTag","setTag","tag","getConfig","getShouldEnableGestureOnSetup","getView","getEventManagers","getTracker","getTrackedPointersID","getState","isEnabled","setShouldCancelWhenOutside","shouldCancel","getShouldCancelWhenOutside","getPointerType","method","__getHandler","argMapping","__nodeConfig","Array","isArray","index","entries","nativeValue","setValue"],"mappings":"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","sourcesContent":["/* eslint-disable @typescript-eslint/no-empty-function */\nimport { findNodeHandle } from 'react-native';\nimport { State } from '../../State';\nimport {\n  Config,\n  AdaptedEvent,\n  PropsRef,\n  ResultEvent,\n  PointerData,\n  ResultTouchEvent,\n  PointerType,\n  TouchEventType,\n  EventTypes,\n} from '../interfaces';\nimport EventManager from '../tools/EventManager';\nimport GestureHandlerOrchestrator from '../tools/GestureHandlerOrchestrator';\nimport InteractionManager from '../tools/InteractionManager';\nimport PointerEventManager from '../tools/PointerEventManager';\nimport PointerTracker, { TrackerElement } from '../tools/PointerTracker';\nimport TouchEventManager from '../tools/TouchEventManager';\nimport { isPointerInBounds } from '../utils';\n\nexport default abstract class GestureHandler {\n  private lastSentState: State | null = null;\n  protected currentState: State = State.UNDETERMINED;\n\n  protected shouldCancellWhenOutside = false;\n  protected hasCustomActivationCriteria: boolean;\n  protected enabled = false;\n\n  private ref!: number;\n  private propsRef!: React.RefObject<unknown>;\n  private handlerTag!: number;\n  protected config: Config = { enabled: false };\n  protected view!: HTMLElement;\n\n  protected eventManagers: EventManager[] = [];\n  protected tracker: PointerTracker = new PointerTracker();\n\n  // Orchestrator properties\n  protected activationIndex = 0;\n  protected awaiting = false;\n  protected active = false;\n  protected shouldResetProgress = false;\n  protected pointerType: PointerType = PointerType.NONE;\n\n  public constructor() {\n    this.hasCustomActivationCriteria = false;\n  }\n\n  //\n  // Initializing handler\n  //\n\n  protected init(ref: number, propsRef: React.RefObject<unknown>) {\n    this.propsRef = propsRef;\n    this.ref = ref;\n\n    this.currentState = State.UNDETERMINED;\n\n    this.setView();\n    this.addEventManager(new PointerEventManager(this.view));\n    this.addEventManager(new TouchEventManager(this.view));\n  }\n\n  private setView() {\n    if (!this.ref) {\n      throw new Error(\n        `Cannot find HTML Element for handler ${this.handlerTag}`\n      );\n    }\n\n    this.view = (findNodeHandle(this.ref) as unknown) as HTMLElement;\n    this.view.style['touchAction'] = 'none';\n    this.view.style['webkitUserSelect'] = 'none';\n    this.view.style['userSelect'] = 'none';\n\n    //@ts-ignore This one disables default events on Safari\n    this.view.style['WebkitTouchCallout'] = 'none';\n  }\n\n  private addEventManager(manager: EventManager): void {\n    manager.setOnPointerDown(this.onPointerDown.bind(this));\n    manager.setOnPointerAdd(this.onPointerAdd.bind(this));\n    manager.setOnPointerUp(this.onPointerUp.bind(this));\n    manager.setOnPointerRemove(this.onPointerRemove.bind(this));\n    manager.setOnPointerMove(this.onPointerMove.bind(this));\n    manager.setOnPointerEnter(this.onPointerEnter.bind(this));\n    manager.setOnPointerOut(this.onPointerOut.bind(this));\n    manager.setOnPointerCancel(this.onPointerCancel.bind(this));\n    manager.setOnPointerOutOfBounds(this.onPointerOutOfBounds.bind(this));\n    manager.setListeners();\n\n    this.eventManagers.push(manager);\n  }\n\n  //\n  // Resetting handler\n  //\n\n  protected onCancel(): void {}\n  protected onReset(): void {}\n  protected resetProgress(): void {}\n\n  public reset(): void {\n    this.tracker.resetTracker();\n    this.onReset();\n    this.resetProgress();\n    this.eventManagers.forEach((manager: EventManager) =>\n      manager.resetManager()\n    );\n    this.currentState = State.UNDETERMINED;\n  }\n\n  //\n  // State logic\n  //\n\n  public moveToState(newState: State, sendIfDisabled?: boolean) {\n    if (this.currentState === newState) {\n      return;\n    }\n\n    const oldState = this.currentState;\n    this.currentState = newState;\n\n    GestureHandlerOrchestrator.getInstance().onHandlerStateChange(\n      this,\n      newState,\n      oldState,\n      sendIfDisabled\n    );\n\n    this.onStateChange(newState, oldState);\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {}\n\n  public begin(): void {\n    if (!this.checkHitSlop()) {\n      return;\n    }\n\n    if (this.currentState === State.UNDETERMINED) {\n      this.moveToState(State.BEGAN);\n    }\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send fail event\n   */\n  public fail(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.BEGAN\n    ) {\n      this.moveToState(State.FAILED, sendIfDisabled);\n      this.view.style.cursor = 'auto';\n    }\n\n    this.resetProgress();\n  }\n\n  /**\n   * @param {boolean} sendIfDisabled - Used when handler becomes disabled. With this flag orchestrator will be forced to send cancel event\n   */\n  public cancel(sendIfDisabled?: boolean): void {\n    if (\n      this.currentState === State.ACTIVE ||\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.onCancel();\n      this.moveToState(State.CANCELLED, sendIfDisabled);\n      this.view.style.cursor = 'auto';\n    }\n  }\n\n  public activate(_force = false) {\n    if (\n      this.currentState === State.UNDETERMINED ||\n      this.currentState === State.BEGAN\n    ) {\n      this.moveToState(State.ACTIVE);\n      this.view.style.cursor = 'grab';\n    }\n  }\n\n  public end() {\n    if (\n      this.currentState === State.BEGAN ||\n      this.currentState === State.ACTIVE\n    ) {\n      this.moveToState(State.END);\n      this.view.style.cursor = 'auto';\n    }\n\n    this.resetProgress();\n  }\n\n  //\n  // Methods for orchestrator\n  //\n\n  public isAwaiting(): boolean {\n    return this.awaiting;\n  }\n  public setAwaiting(value: boolean): void {\n    this.awaiting = value;\n  }\n\n  public isActive(): boolean {\n    return this.active;\n  }\n  public setActive(value: boolean): void {\n    this.active = value;\n  }\n\n  public getShouldResetProgress(): boolean {\n    return this.shouldResetProgress;\n  }\n  public setShouldResetProgress(value: boolean): void {\n    this.shouldResetProgress = value;\n  }\n\n  public getActivationIndex(): number {\n    return this.activationIndex;\n  }\n  public setActivationIndex(value: number): void {\n    this.activationIndex = value;\n  }\n\n  public shouldWaitForHandlerFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldWaitForHandlerFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRequireToWaitForFailure(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldRequireHandlerToWaitForFailure(\n      this,\n      handler\n    );\n  }\n\n  public shouldRecognizeSimultaneously(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return true;\n    }\n\n    return InteractionManager.getInstance().shouldRecognizeSimultaneously(\n      this,\n      handler\n    );\n  }\n\n  public shouldBeCancelledByOther(handler: GestureHandler): boolean {\n    if (handler === this) {\n      return false;\n    }\n\n    return InteractionManager.getInstance().shouldHandlerBeCancelledBy(\n      this,\n      handler\n    );\n  }\n\n  //\n  // Event actions\n  //\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    GestureHandlerOrchestrator.getInstance().recordHandlerIfNotPresent(this);\n    this.pointerType = event.pointerType;\n\n    if (this.pointerType === PointerType.TOUCH) {\n      GestureHandlerOrchestrator.getInstance().cancelMouseAndPenGestures(this);\n    }\n\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Adding another pointer to existing ones\n  protected onPointerAdd(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerUp(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  // Removing pointer, when there is more than one pointers\n  protected onPointerRemove(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerMove(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(false);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerOut(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerEnter(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerCancel(event: AdaptedEvent): void {\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  protected onPointerOutOfBounds(event: AdaptedEvent): void {\n    this.tryToSendMoveEvent(true);\n    if (this.config.needsPointerData) {\n      this.sendTouchEvent(event);\n    }\n  }\n  private tryToSendMoveEvent(out: boolean): void {\n    if (\n      this.enabled &&\n      this.active &&\n      (!out || (out && !this.shouldCancellWhenOutside))\n    ) {\n      this.sendEvent(this.currentState, this.currentState);\n    }\n  }\n\n  public sendTouchEvent(event: AdaptedEvent): void {\n    if (!this.enabled) {\n      return;\n    }\n\n    const { onGestureHandlerEvent }: PropsRef = this.propsRef\n      .current as PropsRef;\n\n    const touchEvent: ResultTouchEvent | undefined = this.transformTouchEvent(\n      event\n    );\n\n    if (touchEvent) {\n      invokeNullableMethod(onGestureHandlerEvent, touchEvent);\n    }\n  }\n\n  //\n  // Events Sending\n  //\n\n  public sendEvent = (newState: State, oldState: State): void => {\n    const {\n      onGestureHandlerEvent,\n      onGestureHandlerStateChange,\n    }: PropsRef = this.propsRef.current as PropsRef;\n\n    const resultEvent: ResultEvent = this.transformEventData(\n      newState,\n      oldState\n    );\n\n    // In the new API oldState field has to be undefined, unless we send event state changed\n    // Here the order is flipped to avoid workarounds such as making backup of the state and setting it to undefined first, then changing it back\n    // Flipping order with setting oldState to undefined solves issue, when events were being sent twice instead of once\n    // However, this may cause trouble in the future (but for now we don't know that)\n\n    if (this.lastSentState !== newState) {\n      this.lastSentState = newState;\n      invokeNullableMethod(onGestureHandlerStateChange, resultEvent);\n    }\n    if (this.currentState === State.ACTIVE) {\n      resultEvent.nativeEvent.oldState = undefined;\n      invokeNullableMethod(onGestureHandlerEvent, resultEvent);\n    }\n  };\n\n  private transformEventData(newState: State, oldState: State): ResultEvent {\n    return {\n      nativeEvent: {\n        numberOfPointers: this.tracker.getTrackedPointersCount(),\n        state: newState,\n        pointerInside: isPointerInBounds(this.view, {\n          x: this.tracker.getLastAvgX(),\n          y: this.tracker.getLastAvgY(),\n        }),\n        ...this.transformNativeEvent(),\n        handlerTag: this.handlerTag,\n        target: this.ref,\n        oldState: newState !== oldState ? oldState : undefined,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  private transformTouchEvent(\n    event: AdaptedEvent\n  ): ResultTouchEvent | undefined {\n    const rect = this.view.getBoundingClientRect();\n\n    const all: PointerData[] = [];\n    const changed: PointerData[] = [];\n\n    const trackerData = this.tracker.getData();\n\n    // This if handles edge case where all pointers have been cancelled\n    // When pointercancel is triggered, reset method is called. This means that tracker will be reset after first pointer being cancelled\n    // The problem is, that handler will receive another pointercancel event from the rest of the pointers\n    // To avoid crashing, we don't send event if tracker tracks no pointers, i.e. has been reset\n    if (trackerData.size === 0 || !trackerData.has(event.pointerId)) {\n      return;\n    }\n\n    trackerData.forEach((element: TrackerElement, key: number): void => {\n      const id: number = this.tracker.getMappedTouchEventId(key);\n\n      all.push({\n        id: id,\n        x: element.lastX - rect.left,\n        y: element.lastY - rect.top,\n        absoluteX: element.lastX,\n        absoluteY: element.lastY,\n      });\n    });\n\n    // Each pointer sends its own event, so we want changed touches to contain only the pointer that has changed.\n    // However, if the event is cancel, we want to cancel all pointers to avoid crashes\n    if (event.eventType !== EventTypes.CANCEL) {\n      changed.push({\n        id: this.tracker.getMappedTouchEventId(event.pointerId),\n        x: event.x - rect.left,\n        y: event.y - rect.top,\n        absoluteX: event.x,\n        absoluteY: event.y,\n      });\n    } else {\n      trackerData.forEach((element: TrackerElement, key: number): void => {\n        const id: number = this.tracker.getMappedTouchEventId(key);\n\n        changed.push({\n          id: id,\n          x: element.lastX - rect.left,\n          y: element.lastY - rect.top,\n          absoluteX: element.lastX,\n          absoluteY: element.lastY,\n        });\n      });\n    }\n\n    let eventType: TouchEventType = TouchEventType.UNDETERMINED;\n\n    switch (event.eventType) {\n      case EventTypes.DOWN:\n      case EventTypes.ADDITIONAL_POINTER_DOWN:\n        eventType = TouchEventType.DOWN;\n        break;\n      case EventTypes.UP:\n      case EventTypes.ADDITIONAL_POINTER_UP:\n        eventType = TouchEventType.UP;\n        break;\n      case EventTypes.MOVE:\n        eventType = TouchEventType.MOVE;\n        break;\n      case EventTypes.CANCEL:\n        eventType = TouchEventType.CANCELLED;\n        break;\n    }\n\n    // Here, when we receive up event, we want to decrease number of touches\n    // That's because we want handler to send information that there's one pointer less\n    // However, we still want this pointer to be present in allTouches array, so that its data can be accessed\n    let numberOfTouches: number = all.length;\n\n    if (\n      event.eventType === EventTypes.UP ||\n      event.eventType === EventTypes.ADDITIONAL_POINTER_UP\n    ) {\n      --numberOfTouches;\n    }\n\n    return {\n      nativeEvent: {\n        handlerTag: this.handlerTag,\n        state: this.currentState,\n        eventType: event.touchEventType ?? eventType,\n        changedTouches: changed,\n        allTouches: all,\n        numberOfTouches: numberOfTouches,\n      },\n      timeStamp: Date.now(),\n    };\n  }\n\n  protected transformNativeEvent() {\n    return {};\n  }\n\n  //\n  // Handling config\n  //\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    this.config = { enabled: enabled, ...props };\n    this.enabled = enabled;\n    this.validateHitSlops();\n\n    if (this.enabled) {\n      return;\n    }\n\n    switch (this.currentState) {\n      case State.ACTIVE:\n        this.fail(true);\n        break;\n      case State.UNDETERMINED:\n        GestureHandlerOrchestrator.getInstance().removeHandlerFromOrchestrator(\n          this\n        );\n        break;\n      default:\n        this.cancel(true);\n        break;\n    }\n  }\n\n  protected checkCustomActivationCriteria(criterias: string[]): void {\n    for (const key in this.config) {\n      if (criterias.indexOf(key) >= 0) {\n        this.hasCustomActivationCriteria = true;\n      }\n    }\n  }\n\n  private validateHitSlops(): void {\n    if (!this.config.hitSlop) {\n      return;\n    }\n\n    if (\n      this.config.hitSlop.left !== undefined &&\n      this.config.hitSlop.right !== undefined &&\n      this.config.hitSlop.width !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define left, right and width at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.width !== undefined &&\n      this.config.hitSlop.left === undefined &&\n      this.config.hitSlop.right === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When width is defined, either left or right has to be defined'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top !== undefined &&\n      this.config.hitSlop.bottom !== undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: Cannot define top, bottom and height at the same time'\n      );\n    }\n\n    if (\n      this.config.hitSlop.height !== undefined &&\n      this.config.hitSlop.top === undefined &&\n      this.config.hitSlop.bottom === undefined\n    ) {\n      throw new Error(\n        'HitSlop Error: When height is defined, either top or bottom has to be defined'\n      );\n    }\n  }\n\n  private checkHitSlop(): boolean {\n    if (!this.config.hitSlop) {\n      return true;\n    }\n\n    const width = this.view.getBoundingClientRect().width;\n    const height = this.view.getBoundingClientRect().height;\n\n    let left = 0;\n    let top = 0;\n    let right: number = width;\n    let bottom: number = height;\n\n    if (this.config.hitSlop.horizontal !== undefined) {\n      left -= this.config.hitSlop.horizontal;\n      right += this.config.hitSlop.horizontal;\n    }\n\n    if (this.config.hitSlop.vertical !== undefined) {\n      top -= this.config.hitSlop.vertical;\n      bottom += this.config.hitSlop.vertical;\n    }\n\n    if (this.config.hitSlop.left !== undefined) {\n      left = -this.config.hitSlop.left;\n    }\n\n    if (this.config.hitSlop.right !== undefined) {\n      right = width + this.config.hitSlop.right;\n    }\n\n    if (this.config.hitSlop.top !== undefined) {\n      top = -this.config.hitSlop.top;\n    }\n\n    if (this.config.hitSlop.bottom !== undefined) {\n      bottom = width + this.config.hitSlop.bottom;\n    }\n    if (this.config.hitSlop.width !== undefined) {\n      if (this.config.hitSlop.left !== undefined) {\n        right = left + this.config.hitSlop.width;\n      } else if (this.config.hitSlop.right !== undefined) {\n        left = right - this.config.hitSlop.width;\n      }\n    }\n\n    if (this.config.hitSlop.height !== undefined) {\n      if (this.config.hitSlop.top !== undefined) {\n        bottom = top + this.config.hitSlop.height;\n      } else if (this.config.hitSlop.bottom !== undefined) {\n        top = bottom - this.config.hitSlop.height;\n      }\n    }\n\n    const rect: DOMRect = this.view.getBoundingClientRect();\n    const offsetX: number = this.tracker.getLastX() - rect.left;\n    const offsetY: number = this.tracker.getLastY() - rect.top;\n\n    if (\n      offsetX >= left &&\n      offsetX <= right &&\n      offsetY >= top &&\n      offsetY <= bottom\n    ) {\n      return true;\n    }\n    return false;\n  }\n\n  public isPointerInBounds({ x, y }: { x: number; y: number }): boolean {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n\n    return (\n      x >= rect.left && x <= rect.right && y >= rect.top && y <= rect.bottom\n    );\n  }\n\n  protected resetConfig(): void {}\n\n  //\n  // Getters and setters\n  //\n\n  public getTag(): number {\n    return this.handlerTag;\n  }\n  public setTag(tag: number): void {\n    this.handlerTag = tag;\n  }\n\n  protected getConfig() {\n    return this.config;\n  }\n\n  public getShouldEnableGestureOnSetup(): boolean {\n    throw new Error('Must override GestureHandler.shouldEnableGestureOnSetup');\n  }\n\n  public getView(): HTMLElement {\n    return this.view;\n  }\n\n  public getEventManagers(): EventManager[] {\n    return this.eventManagers;\n  }\n\n  public getTracker(): PointerTracker {\n    return this.tracker;\n  }\n\n  public getTrackedPointersID(): number[] {\n    return this.tracker.getTrackedPointersID();\n  }\n\n  public getState(): State {\n    return this.currentState;\n  }\n\n  public isEnabled(): boolean {\n    return this.enabled;\n  }\n\n  protected setShouldCancelWhenOutside(shouldCancel: boolean) {\n    this.shouldCancellWhenOutside = shouldCancel;\n  }\n  protected getShouldCancelWhenOutside(): boolean {\n    return this.shouldCancellWhenOutside;\n  }\n\n  public getPointerType(): PointerType {\n    return this.pointerType;\n  }\n}\n\nfunction invokeNullableMethod(\n  method:\n    | ((event: ResultEvent | ResultTouchEvent) => void)\n    | { __getHandler: () => (event: ResultEvent | ResultTouchEvent) => void }\n    | { __nodeConfig: { argMapping: unknown[] } },\n  event: ResultEvent | ResultTouchEvent\n): void {\n  if (!method) {\n    return;\n  }\n\n  if (typeof method === 'function') {\n    method(event);\n    return;\n  }\n\n  if ('__getHandler' in method && typeof method.__getHandler === 'function') {\n    const handler = method.__getHandler();\n    invokeNullableMethod(handler, event);\n    return;\n  }\n\n  if (!('__nodeConfig' in method)) {\n    return;\n  }\n\n  const { argMapping } = method.__nodeConfig;\n  if (!Array.isArray(argMapping)) {\n    return;\n  }\n\n  for (const [index, [key, value]] of argMapping.entries()) {\n    if (!(key in event.nativeEvent)) {\n      continue;\n    }\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    const nativeValue = event.nativeEvent[key];\n\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    if (value?.setValue) {\n      //Reanimated API\n      // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n      value.setValue(nativeValue);\n    } else {\n      //RN Animated API\n      method.__nodeConfig.argMapping[index] = [key, nativeValue];\n    }\n  }\n\n  return;\n}\n"]},"metadata":{},"sourceType":"script"}