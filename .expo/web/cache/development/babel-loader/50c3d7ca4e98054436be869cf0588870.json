{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nrequire(\"react-native-gesture-handler\");\nvar _stack = require(\"@react-navigation/stack\");\nvar _reactNativeSplashScreen = _interopRequireDefault(require(\"react-native-splash-screen\"));\nvar _routes = _interopRequireDefault(require(\"./src/routes\"));\nvar _netinfo = _interopRequireDefault(require(\"@react-native-community/netinfo\"));\nvar _reactNative = require(\"react-native\");\nvar _OfflineScreen = _interopRequireDefault(require(\"./src/screens/OfflineScreen\"));\nvar _jsxFileName = \"D:\\\\reactNative\\\\test\\\\App.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n_reactNative.LogBox.ignoreLogs(['VirtualizedLists should never be nested inside plain ScrollViews with the same orientation because it can break windowing and other functionality ']);\n_reactNative.LogBox.ignoreAllLogs();\nvar App = function (_Component) {\n  (0, _inherits2.default)(App, _Component);\n  var _super = _createSuper(App);\n  function App(props) {\n    var _this;\n    (0, _classCallCheck2.default)(this, App);\n    _this = _super.call(this, props);\n    _this.NetInfoSubscribtion = null;\n    _this._handleConnectivityChange = function (state) {\n      _this.setState({\n        connection_status: state.isConnected,\n        connection_type: state.type,\n        connection_net_reachable: state.isInternetReachable,\n        connection_wifi_enabled: state.isWifiEnabled,\n        connection_details: state.details\n      });\n    };\n    _this.state = {\n      connection_status: true,\n      connection_type: null,\n      connection_net_reachable: false,\n      connection_wifi_enabled: false,\n      connection_details: null\n    };\n    return _this;\n  }\n  (0, _createClass2.default)(App, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      this.NetInfoSubscribtion = _netinfo.default.addEventListener(this._handleConnectivityChange);\n      _reactNativeSplashScreen.default.hide();\n      this.setState((0, _extends2.default)({}, this.state, {\n        connection_status: false\n      }));\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      this.NetInfoSubscribtion && this.NetInfoSubscribtion();\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return _react.default.createElement(_react.default.Fragment, null, this.state.connection_status ? _react.default.createElement(_routes.default, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 46\n        }\n      }) : _react.default.createElement(_OfflineScreen.default, {\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 58\n        }\n      }));\n    }\n  }]);\n  return App;\n}(_react.Component);\nvar styles = _reactNative.StyleSheet.create({\n  body: {\n    flex: 1,\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#2193b0'\n  },\n  buttonText: {\n    fontSize: 18,\n    textAlign: 'center',\n    margin: 10,\n    color: '#ffffff'\n  }\n});\nvar _default = App;\nexports.default = _default;","map":{"version":3,"names":["LogBox","ignoreLogs","ignoreAllLogs","App","props","NetInfoSubscribtion","_handleConnectivityChange","state","setState","connection_status","isConnected","connection_type","type","connection_net_reachable","isInternetReachable","connection_wifi_enabled","isWifiEnabled","connection_details","details","NetInfo","addEventListener","SplashScreen","hide","Component","styles","StyleSheet","create","body","flex","padding","alignItems","backgroundColor","buttonText","fontSize","textAlign","margin","color"],"sources":["D:/reactNative/test/App.js"],"sourcesContent":["import React, {Component, useEffect, useState} from 'react';\nimport 'react-native-gesture-handler';\nimport {createStackNavigator} from '@react-navigation/stack';\nimport SplashScreen from 'react-native-splash-screen';\nimport Route from './src/routes';\nimport NetInfo from '@react-native-community/netinfo';\nimport {Alert, LogBox, StyleSheet} from 'react-native';\nimport OfflineScreen from './src/screens/OfflineScreen';\n\nLogBox.ignoreLogs([\n  'VirtualizedLists should never be nested inside plain ScrollViews with the same orientation because it can break windowing and other functionality ',\n]);\nLogBox.ignoreAllLogs();\nclass App extends Component {\n  NetInfoSubscribtion = null;\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      connection_status: true,\n      connection_type: null,\n      connection_net_reachable: false,\n      connection_wifi_enabled: false,\n      connection_details: null,\n    };\n  }\n\n  componentDidMount() {\n    this.NetInfoSubscribtion = NetInfo.addEventListener(\n      this._handleConnectivityChange,\n    );\n    SplashScreen.hide();\n    this.setState({...this.state, connection_status: false});\n  }\n\n  componentWillUnmount() {\n    this.NetInfoSubscribtion && this.NetInfoSubscribtion();\n  }\n\n  _handleConnectivityChange = state => {\n    this.setState({\n      connection_status: state.isConnected,\n      connection_type: state.type,\n      connection_net_reachable: state.isInternetReachable,\n      connection_wifi_enabled: state.isWifiEnabled,\n      connection_details: state.details,\n    });\n  };\n\n  render() {\n    return <>{this.state.connection_status ? <Route /> : <OfflineScreen />}</>;\n  }\n}\n\nconst styles = StyleSheet.create({\n  body: {\n    flex: 1,\n    padding: 20,\n    alignItems: 'center',\n    backgroundColor: '#2193b0',\n  },\n  buttonText: {\n    fontSize: 18,\n    textAlign: 'center',\n    margin: 10,\n    color: '#ffffff',\n  },\n});\n\nexport default App;\n"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAwD;AAAA;AAAA;AAAA;AAAA;AAExDA,mBAAM,CAACC,UAAU,CAAC,CAChB,oJAAoJ,CACrJ,CAAC;AACFD,mBAAM,CAACE,aAAa,EAAE;AAAC,IACjBC,GAAG;EAAA;EAAA;EAGP,aAAYC,KAAK,EAAE;IAAA;IAAA;IACjB,0BAAMA,KAAK;IAAE,MAHfC,mBAAmB,GAAG,IAAI;IAAA,MAyB1BC,yBAAyB,GAAG,UAAAC,KAAK,EAAI;MACnC,MAAKC,QAAQ,CAAC;QACZC,iBAAiB,EAAEF,KAAK,CAACG,WAAW;QACpCC,eAAe,EAAEJ,KAAK,CAACK,IAAI;QAC3BC,wBAAwB,EAAEN,KAAK,CAACO,mBAAmB;QACnDC,uBAAuB,EAAER,KAAK,CAACS,aAAa;QAC5CC,kBAAkB,EAAEV,KAAK,CAACW;MAC5B,CAAC,CAAC;IACJ,CAAC;IA7BC,MAAKX,KAAK,GAAG;MACXE,iBAAiB,EAAE,IAAI;MACvBE,eAAe,EAAE,IAAI;MACrBE,wBAAwB,EAAE,KAAK;MAC/BE,uBAAuB,EAAE,KAAK;MAC9BE,kBAAkB,EAAE;IACtB,CAAC;IAAC;EACJ;EAAC;IAAA;IAAA,OAED,6BAAoB;MAClB,IAAI,CAACZ,mBAAmB,GAAGc,gBAAO,CAACC,gBAAgB,CACjD,IAAI,CAACd,yBAAyB,CAC/B;MACDe,gCAAY,CAACC,IAAI,EAAE;MACnB,IAAI,CAACd,QAAQ,4BAAK,IAAI,CAACD,KAAK;QAAEE,iBAAiB,EAAE;MAAK,GAAE;IAC1D;EAAC;IAAA;IAAA,OAED,gCAAuB;MACrB,IAAI,CAACJ,mBAAmB,IAAI,IAAI,CAACA,mBAAmB,EAAE;IACxD;EAAC;IAAA;IAAA,OAYD,kBAAS;MACP,OAAO,4DAAG,IAAI,CAACE,KAAK,CAACE,iBAAiB,GAAG,6BAAC,eAAK;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,GAAG,6BAAC,sBAAa;QAAA;QAAA;UAAA;UAAA;UAAA;QAAA;MAAA,EAAG,CAAI;IAC5E;EAAC;EAAA;AAAA,EAtCec,gBAAS;AAyC3B,IAAMC,MAAM,GAAGC,uBAAU,CAACC,MAAM,CAAC;EAC/BC,IAAI,EAAE;IACJC,IAAI,EAAE,CAAC;IACPC,OAAO,EAAE,EAAE;IACXC,UAAU,EAAE,QAAQ;IACpBC,eAAe,EAAE;EACnB,CAAC;EACDC,UAAU,EAAE;IACVC,QAAQ,EAAE,EAAE;IACZC,SAAS,EAAE,QAAQ;IACnBC,MAAM,EAAE,EAAE;IACVC,KAAK,EAAE;EACT;AACF,CAAC,CAAC;AAAC,eAEYjC,GAAG;AAAA"},"metadata":{},"sourceType":"script"}