{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = createMultiStyleIconSet;\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _react = _interopRequireWildcard(require(\"react\"));\nvar _propTypes = _interopRequireDefault(require(\"prop-types\"));\nvar _createIconSet = _interopRequireWildcard(require(\"./create-icon-set\"));\nvar _jsxFileName = \"D:\\\\reactNative\\\\test\\\\node_modules\\\\react-native-vector-icons\\\\lib\\\\create-multi-style-icon-set.js\";\nfunction _getRequireWildcardCache(nodeInterop) { if (typeof WeakMap !== \"function\") return null; var cacheBabelInterop = new WeakMap(); var cacheNodeInterop = new WeakMap(); return (_getRequireWildcardCache = function _getRequireWildcardCache(nodeInterop) { return nodeInterop ? cacheNodeInterop : cacheBabelInterop; })(nodeInterop); }\nfunction _interopRequireWildcard(obj, nodeInterop) { if (!nodeInterop && obj && obj.__esModule) { return obj; } if (obj === null || typeof obj !== \"object\" && typeof obj !== \"function\") { return { default: obj }; } var cache = _getRequireWildcardCache(nodeInterop); if (cache && cache.has(obj)) { return cache.get(obj); } var newObj = {}; var hasPropertyDescriptor = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var key in obj) { if (key !== \"default\" && Object.prototype.hasOwnProperty.call(obj, key)) { var desc = hasPropertyDescriptor ? Object.getOwnPropertyDescriptor(obj, key) : null; if (desc && (desc.get || desc.set)) { Object.defineProperty(newObj, key, desc); } else { newObj[key] = obj[key]; } } } newObj.default = obj; if (cache) { cache.set(obj, newObj); } return newObj; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction createMultiStyleIconSet(styles) {\n  var optionsInput = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var styleNames = Object.keys(styles);\n  if (styleNames.length === 0) {\n    throw new Error('You need to add at least one style');\n  }\n  var options = (0, _extends2.default)({\n    defaultStyle: styleNames[0],\n    fallbackFamily: function fallbackFamily() {\n      return styleNames[0];\n    },\n    glyphValidator: function glyphValidator() {\n      return true;\n    }\n  }, optionsInput);\n  var iconSets = styleNames.reduce(function (acc, name) {\n    var style = styles[name];\n    acc[name] = (0, _createIconSet.default)(style.glyphMap || {}, style.fontFamily || '', style.fontFile || '', style.fontStyle || {});\n    return acc;\n  }, {});\n  function styleFromProps(props) {\n    return Object.keys(props).reduce(function (result, propName) {\n      return styleNames.indexOf(propName) !== -1 && props[propName] === true ? propName : result;\n    }, options.defaultStyle);\n  }\n  function getIconSetForProps(props) {\n    var name = props.name;\n    var style = styleFromProps(props);\n    if (options.glyphValidator(name, style)) return iconSets[style];\n    var family = options.fallbackFamily(name);\n    if (styleNames.indexOf(family) === -1) {\n      return options.defaultStyle;\n    }\n    return iconSets[family];\n  }\n  function selectIconClass(iconSet, iconClass) {\n    return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n  }\n  function reduceProps(props) {\n    return Object.keys(props).reduce(function (acc, prop) {\n      if (styleNames.indexOf(prop) === -1) {\n        acc[prop] = props[prop];\n      }\n      return acc;\n    }, {});\n  }\n  function getStyledIconSet(style) {\n    var name = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    if (styleNames.indexOf(style) === -1) {\n      return iconSets[options.defaultStyle];\n    }\n    return !name ? iconSets[styleFromProps((0, _defineProperty2.default)({}, style, true))] : getIconSetForProps((0, _defineProperty2.default)({\n      name: name\n    }, style, true));\n  }\n  function getImageSource(name) {\n    var size = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : _createIconSet.DEFAULT_ICON_SIZE;\n    var color = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : _createIconSet.DEFAULT_ICON_COLOR;\n    var style = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : options.defaultStyle;\n    return getStyledIconSet(style, name).getImageSource(name, size, color);\n  }\n  function getFontFamily() {\n    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : options.defaultStyle;\n    return getStyledIconSet(style).getFontFamily();\n  }\n  function getRawGlyphMap() {\n    var style = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : options.defaultStyle;\n    return getStyledIconSet(style).getRawGlyphMap();\n  }\n  function hasIcon(name) {\n    var style = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : options.defaultStyle;\n    return options.glyphValidator(name, style);\n  }\n  function createStyledIconClass() {\n    var selectClass = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var IconClass = function (_PureComponent) {\n      (0, _inherits2.default)(IconClass, _PureComponent);\n      var _super = _createSuper(IconClass);\n      function IconClass() {\n        (0, _classCallCheck2.default)(this, IconClass);\n        return _super.apply(this, arguments);\n      }\n      (0, _createClass2.default)(IconClass, [{\n        key: \"render\",\n        value: function render() {\n          var selectedIconSet = getIconSetForProps(this.props);\n          var SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n          var props = reduceProps(this.props);\n          return _react.default.createElement(SelectedIconClass, (0, _extends2.default)({}, props, {\n            __self: this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 16\n            }\n          }));\n        }\n      }]);\n      return IconClass;\n    }(_react.PureComponent);\n    IconClass.propTypes = styleNames.reduce(function (acc, name) {\n      acc[name] = _propTypes.default.bool;\n      return acc;\n    }, {});\n    IconClass.defaultProps = styleNames.reduce(function (acc, name) {\n      acc[name] = false;\n      return acc;\n    }, {});\n    return IconClass;\n  }\n  var Icon = createStyledIconClass();\n  Icon.Button = createStyledIconClass('Button');\n  Icon.getStyledIconSet = getStyledIconSet;\n  Icon.getImageSource = getImageSource;\n  Icon.getFontFamily = getFontFamily;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.hasIcon = hasIcon;\n  return Icon;\n}","map":{"version":3,"names":["createMultiStyleIconSet","styles","optionsInput","styleNames","Object","keys","length","Error","options","defaultStyle","fallbackFamily","glyphValidator","iconSets","reduce","acc","name","style","createIconSet","glyphMap","fontFamily","fontFile","fontStyle","styleFromProps","props","result","propName","indexOf","getIconSetForProps","family","selectIconClass","iconSet","iconClass","reduceProps","prop","getStyledIconSet","getImageSource","size","DEFAULT_ICON_SIZE","color","DEFAULT_ICON_COLOR","getFontFamily","getRawGlyphMap","hasIcon","createStyledIconClass","selectClass","IconClass","selectedIconSet","SelectedIconClass","PureComponent","propTypes","PropTypes","bool","defaultProps","Icon","Button"],"sources":["D:/reactNative/test/node_modules/react-native-vector-icons/lib/create-multi-style-icon-set.js"],"sourcesContent":["import React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\n\nimport createIconSet, {\n  DEFAULT_ICON_COLOR,\n  DEFAULT_ICON_SIZE,\n} from './create-icon-set';\n\nexport default function createMultiStyleIconSet(styles, optionsInput = {}) {\n  const styleNames = Object.keys(styles);\n\n  if (styleNames.length === 0) {\n    throw new Error('You need to add at least one style');\n  }\n\n  const options = {\n    defaultStyle: styleNames[0],\n    fallbackFamily: () => styleNames[0],\n    glyphValidator: () => true,\n    ...optionsInput,\n  };\n\n  const iconSets = styleNames.reduce((acc, name) => {\n    const style = styles[name];\n\n    acc[name] = createIconSet(\n      style.glyphMap || {},\n      style.fontFamily || '',\n      style.fontFile || '',\n      style.fontStyle || {}\n    );\n\n    return acc;\n  }, {});\n\n  function styleFromProps(props) {\n    return Object.keys(props).reduce(\n      (result, propName) =>\n        styleNames.indexOf(propName) !== -1 && props[propName] === true\n          ? propName\n          : result,\n      options.defaultStyle\n    );\n  }\n\n  function getIconSetForProps(props) {\n    const { name } = props;\n    const style = styleFromProps(props);\n\n    if (options.glyphValidator(name, style)) return iconSets[style];\n\n    const family = options.fallbackFamily(name);\n\n    if (styleNames.indexOf(family) === -1) {\n      return options.defaultStyle;\n    }\n\n    return iconSets[family];\n  }\n\n  function selectIconClass(iconSet, iconClass) {\n    return iconClass.length > 0 ? iconSet[iconClass] : iconSet;\n  }\n\n  function reduceProps(props) {\n    return Object.keys(props).reduce((acc, prop) => {\n      if (styleNames.indexOf(prop) === -1) {\n        acc[prop] = props[prop];\n      }\n\n      return acc;\n    }, {});\n  }\n\n  function getStyledIconSet(style, name = '') {\n    if (styleNames.indexOf(style) === -1) {\n      return iconSets[options.defaultStyle];\n    }\n\n    return !name\n      ? iconSets[styleFromProps({ [style]: true })]\n      : getIconSetForProps({ name, [style]: true });\n  }\n\n  function getImageSource(\n    name,\n    size = DEFAULT_ICON_SIZE,\n    color = DEFAULT_ICON_COLOR,\n    style = options.defaultStyle\n  ) {\n    return getStyledIconSet(style, name).getImageSource(name, size, color);\n  }\n\n  function getFontFamily(style = options.defaultStyle) {\n    return getStyledIconSet(style).getFontFamily();\n  }\n\n  function getRawGlyphMap(style = options.defaultStyle) {\n    return getStyledIconSet(style).getRawGlyphMap();\n  }\n\n  function hasIcon(name, style = options.defaultStyle) {\n    return options.glyphValidator(name, style);\n  }\n\n  function createStyledIconClass(selectClass = '') {\n    class IconClass extends PureComponent {\n      static propTypes = styleNames.reduce((acc, name) => {\n        acc[name] = PropTypes.bool;\n        return acc;\n      }, {});\n\n      static defaultProps = styleNames.reduce((acc, name) => {\n        acc[name] = false;\n        return acc;\n      }, {});\n\n      render() {\n        const selectedIconSet = getIconSetForProps(this.props);\n        const SelectedIconClass = selectIconClass(selectedIconSet, selectClass);\n        const props = reduceProps(this.props);\n\n        return <SelectedIconClass {...props} />;\n      }\n    }\n\n    return IconClass;\n  }\n\n  const Icon = createStyledIconClass();\n  Icon.Button = createStyledIconClass('Button');\n  Icon.getStyledIconSet = getStyledIconSet;\n  Icon.getImageSource = getImageSource;\n  Icon.getFontFamily = getFontFamily;\n  Icon.getRawGlyphMap = getRawGlyphMap;\n  Icon.hasIcon = hasIcon;\n\n  return Icon;\n}\n"],"mappings":";;;;;;;;;;;;AAAA;AACA;AAEA;AAG2B;AAAA;AAAA;AAAA;AAAA;AAEZ,SAASA,uBAAuB,CAACC,MAAM,EAAqB;EAAA,IAAnBC,YAAY,uEAAG,CAAC,CAAC;EACvE,IAAMC,UAAU,GAAGC,MAAM,CAACC,IAAI,CAACJ,MAAM,CAAC;EAEtC,IAAIE,UAAU,CAACG,MAAM,KAAK,CAAC,EAAE;IAC3B,MAAM,IAAIC,KAAK,CAAC,oCAAoC,CAAC;EACvD;EAEA,IAAMC,OAAO;IACXC,YAAY,EAAEN,UAAU,CAAC,CAAC,CAAC;IAC3BO,cAAc,EAAE;MAAA,OAAMP,UAAU,CAAC,CAAC,CAAC;IAAA;IACnCQ,cAAc,EAAE;MAAA,OAAM,IAAI;IAAA;EAAA,GACvBT,YAAY,CAChB;EAED,IAAMU,QAAQ,GAAGT,UAAU,CAACU,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI,EAAK;IAChD,IAAMC,KAAK,GAAGf,MAAM,CAACc,IAAI,CAAC;IAE1BD,GAAG,CAACC,IAAI,CAAC,GAAG,IAAAE,sBAAa,EACvBD,KAAK,CAACE,QAAQ,IAAI,CAAC,CAAC,EACpBF,KAAK,CAACG,UAAU,IAAI,EAAE,EACtBH,KAAK,CAACI,QAAQ,IAAI,EAAE,EACpBJ,KAAK,CAACK,SAAS,IAAI,CAAC,CAAC,CACtB;IAED,OAAOP,GAAG;EACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EAEN,SAASQ,cAAc,CAACC,KAAK,EAAE;IAC7B,OAAOnB,MAAM,CAACC,IAAI,CAACkB,KAAK,CAAC,CAACV,MAAM,CAC9B,UAACW,MAAM,EAAEC,QAAQ;MAAA,OACftB,UAAU,CAACuB,OAAO,CAACD,QAAQ,CAAC,KAAK,CAAC,CAAC,IAAIF,KAAK,CAACE,QAAQ,CAAC,KAAK,IAAI,GAC3DA,QAAQ,GACRD,MAAM;IAAA,GACZhB,OAAO,CAACC,YAAY,CACrB;EACH;EAEA,SAASkB,kBAAkB,CAACJ,KAAK,EAAE;IACjC,IAAQR,IAAI,GAAKQ,KAAK,CAAdR,IAAI;IACZ,IAAMC,KAAK,GAAGM,cAAc,CAACC,KAAK,CAAC;IAEnC,IAAIf,OAAO,CAACG,cAAc,CAACI,IAAI,EAAEC,KAAK,CAAC,EAAE,OAAOJ,QAAQ,CAACI,KAAK,CAAC;IAE/D,IAAMY,MAAM,GAAGpB,OAAO,CAACE,cAAc,CAACK,IAAI,CAAC;IAE3C,IAAIZ,UAAU,CAACuB,OAAO,CAACE,MAAM,CAAC,KAAK,CAAC,CAAC,EAAE;MACrC,OAAOpB,OAAO,CAACC,YAAY;IAC7B;IAEA,OAAOG,QAAQ,CAACgB,MAAM,CAAC;EACzB;EAEA,SAASC,eAAe,CAACC,OAAO,EAAEC,SAAS,EAAE;IAC3C,OAAOA,SAAS,CAACzB,MAAM,GAAG,CAAC,GAAGwB,OAAO,CAACC,SAAS,CAAC,GAAGD,OAAO;EAC5D;EAEA,SAASE,WAAW,CAACT,KAAK,EAAE;IAC1B,OAAOnB,MAAM,CAACC,IAAI,CAACkB,KAAK,CAAC,CAACV,MAAM,CAAC,UAACC,GAAG,EAAEmB,IAAI,EAAK;MAC9C,IAAI9B,UAAU,CAACuB,OAAO,CAACO,IAAI,CAAC,KAAK,CAAC,CAAC,EAAE;QACnCnB,GAAG,CAACmB,IAAI,CAAC,GAAGV,KAAK,CAACU,IAAI,CAAC;MACzB;MAEA,OAAOnB,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;EACR;EAEA,SAASoB,gBAAgB,CAAClB,KAAK,EAAa;IAAA,IAAXD,IAAI,uEAAG,EAAE;IACxC,IAAIZ,UAAU,CAACuB,OAAO,CAACV,KAAK,CAAC,KAAK,CAAC,CAAC,EAAE;MACpC,OAAOJ,QAAQ,CAACJ,OAAO,CAACC,YAAY,CAAC;IACvC;IAEA,OAAO,CAACM,IAAI,GACRH,QAAQ,CAACU,cAAc,mCAAIN,KAAK,EAAG,IAAI,EAAG,CAAC,GAC3CW,kBAAkB;MAAGZ,IAAI,EAAJA;IAAI,GAAGC,KAAK,EAAG,IAAI,EAAG;EACjD;EAEA,SAASmB,cAAc,CACrBpB,IAAI,EAIJ;IAAA,IAHAqB,IAAI,uEAAGC,gCAAiB;IAAA,IACxBC,KAAK,uEAAGC,iCAAkB;IAAA,IAC1BvB,KAAK,uEAAGR,OAAO,CAACC,YAAY;IAE5B,OAAOyB,gBAAgB,CAAClB,KAAK,EAAED,IAAI,CAAC,CAACoB,cAAc,CAACpB,IAAI,EAAEqB,IAAI,EAAEE,KAAK,CAAC;EACxE;EAEA,SAASE,aAAa,GAA+B;IAAA,IAA9BxB,KAAK,uEAAGR,OAAO,CAACC,YAAY;IACjD,OAAOyB,gBAAgB,CAAClB,KAAK,CAAC,CAACwB,aAAa,EAAE;EAChD;EAEA,SAASC,cAAc,GAA+B;IAAA,IAA9BzB,KAAK,uEAAGR,OAAO,CAACC,YAAY;IAClD,OAAOyB,gBAAgB,CAAClB,KAAK,CAAC,CAACyB,cAAc,EAAE;EACjD;EAEA,SAASC,OAAO,CAAC3B,IAAI,EAAgC;IAAA,IAA9BC,KAAK,uEAAGR,OAAO,CAACC,YAAY;IACjD,OAAOD,OAAO,CAACG,cAAc,CAACI,IAAI,EAAEC,KAAK,CAAC;EAC5C;EAEA,SAAS2B,qBAAqB,GAAmB;IAAA,IAAlBC,WAAW,uEAAG,EAAE;IAAA,IACvCC,SAAS;MAAA;MAAA;MAAA;QAAA;QAAA;MAAA;MAAA;QAAA;QAAA,OAWb,kBAAS;UACP,IAAMC,eAAe,GAAGnB,kBAAkB,CAAC,IAAI,CAACJ,KAAK,CAAC;UACtD,IAAMwB,iBAAiB,GAAGlB,eAAe,CAACiB,eAAe,EAAEF,WAAW,CAAC;UACvE,IAAMrB,KAAK,GAAGS,WAAW,CAAC,IAAI,CAACT,KAAK,CAAC;UAErC,OAAO,6BAAC,iBAAiB,6BAAKA,KAAK;YAAA;YAAA;cAAA;cAAA;cAAA;YAAA;UAAA,GAAI;QACzC;MAAC;MAAA;IAAA,EAjBqByB,oBAAa;IAA/BH,SAAS,CACNI,SAAS,GAAG9C,UAAU,CAACU,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI,EAAK;MAClDD,GAAG,CAACC,IAAI,CAAC,GAAGmC,kBAAS,CAACC,IAAI;MAC1B,OAAOrC,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAJF+B,SAAS,CAMNO,YAAY,GAAGjD,UAAU,CAACU,MAAM,CAAC,UAACC,GAAG,EAAEC,IAAI,EAAK;MACrDD,GAAG,CAACC,IAAI,CAAC,GAAG,KAAK;MACjB,OAAOD,GAAG;IACZ,CAAC,EAAE,CAAC,CAAC,CAAC;IAWR,OAAO+B,SAAS;EAClB;EAEA,IAAMQ,IAAI,GAAGV,qBAAqB,EAAE;EACpCU,IAAI,CAACC,MAAM,GAAGX,qBAAqB,CAAC,QAAQ,CAAC;EAC7CU,IAAI,CAACnB,gBAAgB,GAAGA,gBAAgB;EACxCmB,IAAI,CAAClB,cAAc,GAAGA,cAAc;EACpCkB,IAAI,CAACb,aAAa,GAAGA,aAAa;EAClCa,IAAI,CAACZ,cAAc,GAAGA,cAAc;EACpCY,IAAI,CAACX,OAAO,GAAGA,OAAO;EAEtB,OAAOW,IAAI;AACb"},"metadata":{},"sourceType":"script"}