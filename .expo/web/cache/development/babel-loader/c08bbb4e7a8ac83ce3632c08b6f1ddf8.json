{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _get2 = _interopRequireDefault(require(\"@babel/runtime/helpers/get\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _State = require(\"../../State\");\nvar _GestureHandler2 = _interopRequireDefault(require(\"./GestureHandler\"));\nvar _excluded = [\"enabled\"];\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nvar DEFAULT_MIN_DURATION_MS = 500;\nvar DEFAULT_MAX_DIST_DP = 10;\nvar SCALING_FACTOR = 10;\nvar LongPressGestureHandler = function (_GestureHandler) {\n  (0, _inherits2.default)(LongPressGestureHandler, _GestureHandler);\n  var _super = _createSuper(LongPressGestureHandler);\n  function LongPressGestureHandler() {\n    var _this;\n    (0, _classCallCheck2.default)(this, LongPressGestureHandler);\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n    _this = _super.call.apply(_super, [this].concat(args));\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"minDurationMs\", DEFAULT_MIN_DURATION_MS);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"defaultMaxDistSq\", DEFAULT_MAX_DIST_DP * SCALING_FACTOR);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"maxDistSq\", _this.defaultMaxDistSq);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"startX\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"startY\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"startTime\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"previousTime\", 0);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"activationTimeout\", void 0);\n    return _this;\n  }\n  (0, _createClass2.default)(LongPressGestureHandler, [{\n    key: \"init\",\n    value: function init(ref, propsRef) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(LongPressGestureHandler.prototype), \"init\", this).call(this, ref, propsRef);\n      this.setShouldCancelWhenOutside(true);\n    }\n  }, {\n    key: \"transformNativeEvent\",\n    value: function transformNativeEvent() {\n      var rect = this.view.getBoundingClientRect();\n      return {\n        x: this.tracker.getLastAvgX() - rect.left,\n        y: this.tracker.getLastAvgY() - rect.top,\n        absoluteX: this.tracker.getLastAvgX(),\n        absoluteY: this.tracker.getLastAvgY(),\n        duration: Date.now() - this.startTime\n      };\n    }\n  }, {\n    key: \"updateGestureConfig\",\n    value: function updateGestureConfig(_ref) {\n      var _ref$enabled = _ref.enabled,\n        enabled = _ref$enabled === void 0 ? true : _ref$enabled,\n        props = (0, _objectWithoutProperties2.default)(_ref, _excluded);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(LongPressGestureHandler.prototype), \"updateGestureConfig\", this).call(this, (0, _extends2.default)({\n        enabled: enabled\n      }, props));\n      this.enabled = enabled;\n      if (this.config.minDurationMs !== undefined) {\n        this.minDurationMs = this.config.minDurationMs;\n      }\n      if (this.config.maxDist !== undefined) {\n        this.maxDistSq = this.config.maxDist * this.config.maxDist;\n      }\n    }\n  }, {\n    key: \"resetConfig\",\n    value: function resetConfig() {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(LongPressGestureHandler.prototype), \"resetConfig\", this).call(this);\n      this.minDurationMs = DEFAULT_MIN_DURATION_MS;\n      this.maxDistSq = this.defaultMaxDistSq;\n    }\n  }, {\n    key: \"onStateChange\",\n    value: function onStateChange(_newState, _oldState) {\n      clearTimeout(this.activationTimeout);\n    }\n  }, {\n    key: \"onPointerDown\",\n    value: function onPointerDown(event) {\n      this.tracker.addToTracker(event);\n      (0, _get2.default)((0, _getPrototypeOf2.default)(LongPressGestureHandler.prototype), \"onPointerDown\", this).call(this, event);\n      this.tryBegin(event);\n      this.tryActivate();\n      this.checkDistanceFail(event);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(LongPressGestureHandler.prototype), \"onPointerMove\", this).call(this, event);\n      this.tracker.track(event);\n      this.checkDistanceFail(event);\n    }\n  }, {\n    key: \"onPointerUp\",\n    value: function onPointerUp(event) {\n      (0, _get2.default)((0, _getPrototypeOf2.default)(LongPressGestureHandler.prototype), \"onPointerUp\", this).call(this, event);\n      this.tracker.removeFromTracker(event.pointerId);\n      if (this.currentState === _State.State.ACTIVE) {\n        this.end();\n      } else {\n        this.fail();\n      }\n    }\n  }, {\n    key: \"tryBegin\",\n    value: function tryBegin(event) {\n      if (this.currentState !== _State.State.UNDETERMINED) {\n        return;\n      }\n      this.previousTime = Date.now();\n      this.startTime = this.previousTime;\n      this.begin();\n      this.startX = event.x;\n      this.startY = event.y;\n    }\n  }, {\n    key: \"tryActivate\",\n    value: function tryActivate() {\n      var _this2 = this;\n      if (this.minDurationMs > 0) {\n        this.activationTimeout = setTimeout(function () {\n          _this2.activate();\n        }, this.minDurationMs);\n      } else if (this.minDurationMs === 0) {\n        this.activate();\n      }\n    }\n  }, {\n    key: \"checkDistanceFail\",\n    value: function checkDistanceFail(event) {\n      var dx = event.x - this.startX;\n      var dy = event.y - this.startY;\n      var distSq = dx * dx + dy * dy;\n      if (distSq <= this.maxDistSq) {\n        return;\n      }\n      if (this.currentState === _State.State.ACTIVE) {\n        this.cancel();\n      } else {\n        this.fail();\n      }\n    }\n  }]);\n  return LongPressGestureHandler;\n}(_GestureHandler2.default);\nexports.default = LongPressGestureHandler;","map":{"version":3,"sources":["LongPressGestureHandler.ts"],"names":["DEFAULT_MIN_DURATION_MS","DEFAULT_MAX_DIST_DP","SCALING_FACTOR","LongPressGestureHandler","GestureHandler","defaultMaxDistSq","init","ref","propsRef","setShouldCancelWhenOutside","transformNativeEvent","rect","view","getBoundingClientRect","x","tracker","getLastAvgX","left","y","getLastAvgY","top","absoluteX","absoluteY","duration","Date","now","startTime","updateGestureConfig","enabled","props","config","minDurationMs","undefined","maxDist","maxDistSq","resetConfig","onStateChange","_newState","_oldState","clearTimeout","activationTimeout","onPointerDown","event","addToTracker","tryBegin","tryActivate","checkDistanceFail","onPointerMove","track","onPointerUp","removeFromTracker","pointerId","currentState","State","ACTIVE","end","fail","UNDETERMINED","previousTime","begin","startX","startY","setTimeout","activate","dx","dy","distSq","cancel"],"mappings":"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","sourcesContent":["import { State } from '../../State';\nimport { AdaptedEvent, Config } from '../interfaces';\n\nimport GestureHandler from './GestureHandler';\n\nconst DEFAULT_MIN_DURATION_MS = 500;\nconst DEFAULT_MAX_DIST_DP = 10;\nconst SCALING_FACTOR = 10;\n\nexport default class LongPressGestureHandler extends GestureHandler {\n  private minDurationMs = DEFAULT_MIN_DURATION_MS;\n  private defaultMaxDistSq = DEFAULT_MAX_DIST_DP * SCALING_FACTOR;\n\n  private maxDistSq = this.defaultMaxDistSq;\n  private startX = 0;\n  private startY = 0;\n\n  private startTime = 0;\n  private previousTime = 0;\n\n  private activationTimeout: number | undefined;\n\n  public init(ref: number, propsRef: React.RefObject<unknown>) {\n    super.init(ref, propsRef);\n    this.setShouldCancelWhenOutside(true);\n  }\n\n  protected transformNativeEvent() {\n    const rect: DOMRect = this.view.getBoundingClientRect();\n\n    return {\n      x: this.tracker.getLastAvgX() - rect.left,\n      y: this.tracker.getLastAvgY() - rect.top,\n      absoluteX: this.tracker.getLastAvgX(),\n      absoluteY: this.tracker.getLastAvgY(),\n      duration: Date.now() - this.startTime,\n    };\n  }\n\n  public updateGestureConfig({ enabled = true, ...props }: Config): void {\n    super.updateGestureConfig({ enabled: enabled, ...props });\n\n    this.enabled = enabled;\n\n    if (this.config.minDurationMs !== undefined) {\n      this.minDurationMs = this.config.minDurationMs;\n    }\n\n    if (this.config.maxDist !== undefined) {\n      this.maxDistSq = this.config.maxDist * this.config.maxDist;\n    }\n  }\n\n  protected resetConfig(): void {\n    super.resetConfig();\n    this.minDurationMs = DEFAULT_MIN_DURATION_MS;\n    this.maxDistSq = this.defaultMaxDistSq;\n  }\n\n  protected onStateChange(_newState: State, _oldState: State): void {\n    clearTimeout(this.activationTimeout);\n  }\n\n  protected onPointerDown(event: AdaptedEvent): void {\n    this.tracker.addToTracker(event);\n    super.onPointerDown(event);\n    this.tryBegin(event);\n    this.tryActivate();\n    this.checkDistanceFail(event);\n  }\n\n  protected onPointerMove(event: AdaptedEvent): void {\n    super.onPointerMove(event);\n    this.tracker.track(event);\n    this.checkDistanceFail(event);\n  }\n\n  protected onPointerUp(event: AdaptedEvent): void {\n    super.onPointerUp(event);\n    this.tracker.removeFromTracker(event.pointerId);\n\n    if (this.currentState === State.ACTIVE) {\n      this.end();\n    } else {\n      this.fail();\n    }\n  }\n\n  private tryBegin(event: AdaptedEvent): void {\n    if (this.currentState !== State.UNDETERMINED) {\n      return;\n    }\n\n    this.previousTime = Date.now();\n    this.startTime = this.previousTime;\n\n    this.begin();\n\n    this.startX = event.x;\n    this.startY = event.y;\n  }\n\n  private tryActivate(): void {\n    if (this.minDurationMs > 0) {\n      this.activationTimeout = setTimeout(() => {\n        this.activate();\n      }, this.minDurationMs);\n    } else if (this.minDurationMs === 0) {\n      this.activate();\n    }\n  }\n\n  private checkDistanceFail(event: AdaptedEvent): void {\n    const dx = event.x - this.startX;\n    const dy = event.y - this.startY;\n    const distSq = dx * dx + dy * dy;\n\n    if (distSq <= this.maxDistSq) {\n      return;\n    }\n\n    if (this.currentState === State.ACTIVE) {\n      this.cancel();\n    } else {\n      this.fail();\n    }\n  }\n}\n"]},"metadata":{},"sourceType":"script"}