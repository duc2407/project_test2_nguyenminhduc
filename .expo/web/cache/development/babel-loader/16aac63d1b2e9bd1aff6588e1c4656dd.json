{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.SimultaneousGesture = exports.ExclusiveGesture = exports.ComposedGesture = void 0;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\nvar _inherits2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inherits\"));\nvar _possibleConstructorReturn2 = _interopRequireDefault(require(\"@babel/runtime/helpers/possibleConstructorReturn\"));\nvar _getPrototypeOf2 = _interopRequireDefault(require(\"@babel/runtime/helpers/getPrototypeOf\"));\nvar _toConsumableArray2 = _interopRequireDefault(require(\"@babel/runtime/helpers/toConsumableArray\"));\nvar _gesture = require(\"./gesture\");\nfunction _createForOfIteratorHelperLoose(o, allowArrayLike) { var it = typeof Symbol !== \"undefined\" && o[Symbol.iterator] || o[\"@@iterator\"]; if (it) return (it = it.call(o)).next.bind(it); if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === \"number\") { if (it) o = it; var i = 0; return function () { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }; } throw new TypeError(\"Invalid attempt to iterate non-iterable instance.\\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.\"); }\nfunction _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === \"string\") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === \"Object\" && o.constructor) n = o.constructor.name; if (n === \"Map\" || n === \"Set\") return Array.from(o); if (n === \"Arguments\" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }\nfunction _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) { arr2[i] = arr[i]; } return arr2; }\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = (0, _getPrototypeOf2.default)(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = (0, _getPrototypeOf2.default)(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return (0, _possibleConstructorReturn2.default)(this, result); }; }\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n  return obj;\n}\nfunction extendRelation(currentRelation, extendWith) {\n  if (currentRelation === undefined) {\n    return (0, _toConsumableArray2.default)(extendWith);\n  } else {\n    return [].concat((0, _toConsumableArray2.default)(currentRelation), (0, _toConsumableArray2.default)(extendWith));\n  }\n}\nvar ComposedGesture = function (_Gesture) {\n  (0, _inherits2.default)(ComposedGesture, _Gesture);\n  var _super = _createSuper(ComposedGesture);\n  function ComposedGesture() {\n    var _this;\n    (0, _classCallCheck2.default)(this, ComposedGesture);\n    _this = _super.call(this);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"gestures\", []);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"simultaneousGestures\", []);\n    _defineProperty((0, _assertThisInitialized2.default)(_this), \"requireGesturesToFail\", []);\n    for (var _len = arguments.length, gestures = new Array(_len), _key = 0; _key < _len; _key++) {\n      gestures[_key] = arguments[_key];\n    }\n    _this.gestures = gestures;\n    return _this;\n  }\n  (0, _createClass2.default)(ComposedGesture, [{\n    key: \"prepareSingleGesture\",\n    value: function prepareSingleGesture(gesture, simultaneousGestures, requireGesturesToFail) {\n      if (gesture instanceof _gesture.BaseGesture) {\n        var newConfig = (0, _extends2.default)({}, gesture.config);\n        newConfig.simultaneousWith = extendRelation(newConfig.simultaneousWith, simultaneousGestures);\n        newConfig.requireToFail = extendRelation(newConfig.requireToFail, requireGesturesToFail);\n        gesture.config = newConfig;\n      } else if (gesture instanceof ComposedGesture) {\n        gesture.simultaneousGestures = simultaneousGestures;\n        gesture.requireGesturesToFail = requireGesturesToFail;\n        gesture.prepare();\n      }\n    }\n  }, {\n    key: \"prepare\",\n    value: function prepare() {\n      for (var _iterator = _createForOfIteratorHelperLoose(this.gestures), _step; !(_step = _iterator()).done;) {\n        var gesture = _step.value;\n        this.prepareSingleGesture(gesture, this.simultaneousGestures, this.requireGesturesToFail);\n      }\n    }\n  }, {\n    key: \"initialize\",\n    value: function initialize() {\n      for (var _iterator2 = _createForOfIteratorHelperLoose(this.gestures), _step2; !(_step2 = _iterator2()).done;) {\n        var gesture = _step2.value;\n        gesture.initialize();\n      }\n    }\n  }, {\n    key: \"toGestureArray\",\n    value: function toGestureArray() {\n      return this.gestures.flatMap(function (gesture) {\n        return gesture.toGestureArray();\n      });\n    }\n  }]);\n  return ComposedGesture;\n}(_gesture.Gesture);\nexports.ComposedGesture = ComposedGesture;\nvar SimultaneousGesture = function (_ComposedGesture) {\n  (0, _inherits2.default)(SimultaneousGesture, _ComposedGesture);\n  var _super2 = _createSuper(SimultaneousGesture);\n  function SimultaneousGesture() {\n    (0, _classCallCheck2.default)(this, SimultaneousGesture);\n    return _super2.apply(this, arguments);\n  }\n  (0, _createClass2.default)(SimultaneousGesture, [{\n    key: \"prepare\",\n    value: function prepare() {\n      var simultaneousArray = this.gestures.flatMap(function (gesture) {\n        return gesture.toGestureArray();\n      }).concat(this.simultaneousGestures);\n      for (var _iterator3 = _createForOfIteratorHelperLoose(this.gestures), _step3; !(_step3 = _iterator3()).done;) {\n        var gesture = _step3.value;\n        this.prepareSingleGesture(gesture, simultaneousArray, this.requireGesturesToFail);\n      }\n    }\n  }]);\n  return SimultaneousGesture;\n}(ComposedGesture);\nexports.SimultaneousGesture = SimultaneousGesture;\nvar ExclusiveGesture = function (_ComposedGesture2) {\n  (0, _inherits2.default)(ExclusiveGesture, _ComposedGesture2);\n  var _super3 = _createSuper(ExclusiveGesture);\n  function ExclusiveGesture() {\n    (0, _classCallCheck2.default)(this, ExclusiveGesture);\n    return _super3.apply(this, arguments);\n  }\n  (0, _createClass2.default)(ExclusiveGesture, [{\n    key: \"prepare\",\n    value: function prepare() {\n      var gestureArrays = this.gestures.map(function (gesture) {\n        return gesture.toGestureArray();\n      });\n      var requireToFail = [];\n      for (var i = 0; i < this.gestures.length; i++) {\n        this.prepareSingleGesture(this.gestures[i], this.simultaneousGestures, this.requireGesturesToFail.concat(requireToFail));\n        requireToFail = requireToFail.concat(gestureArrays[i]);\n      }\n    }\n  }]);\n  return ExclusiveGesture;\n}(ComposedGesture);\nexports.ExclusiveGesture = ExclusiveGesture;","map":{"version":3,"sources":["gestureComposition.ts"],"names":["extendRelation","currentRelation","extendWith","undefined","ComposedGesture","Gesture","constructor","gestures","prepareSingleGesture","gesture","simultaneousGestures","requireGesturesToFail","BaseGesture","newConfig","config","simultaneousWith","requireToFail","prepare","initialize","toGestureArray","flatMap","SimultaneousGesture","simultaneousArray","concat","ExclusiveGesture","gestureArrays","map","i","length"],"mappings":"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","sourcesContent":["import { BaseGesture, Gesture, GestureRef, GestureType } from './gesture';\n\nfunction extendRelation(\n  currentRelation: GestureRef[] | undefined,\n  extendWith: GestureType[]\n) {\n  if (currentRelation === undefined) {\n    return [...extendWith];\n  } else {\n    return [...currentRelation, ...extendWith];\n  }\n}\n\nexport class ComposedGesture extends Gesture {\n  protected gestures: Gesture[] = [];\n  protected simultaneousGestures: GestureType[] = [];\n  protected requireGesturesToFail: GestureType[] = [];\n\n  constructor(...gestures: Gesture[]) {\n    super();\n    this.gestures = gestures;\n  }\n\n  protected prepareSingleGesture(\n    gesture: Gesture,\n    simultaneousGestures: GestureType[],\n    requireGesturesToFail: GestureType[]\n  ) {\n    if (gesture instanceof BaseGesture) {\n      const newConfig = { ...gesture.config };\n\n      newConfig.simultaneousWith = extendRelation(\n        newConfig.simultaneousWith,\n        simultaneousGestures\n      );\n      newConfig.requireToFail = extendRelation(\n        newConfig.requireToFail,\n        requireGesturesToFail\n      );\n\n      gesture.config = newConfig;\n    } else if (gesture instanceof ComposedGesture) {\n      gesture.simultaneousGestures = simultaneousGestures;\n      gesture.requireGesturesToFail = requireGesturesToFail;\n      gesture.prepare();\n    }\n  }\n\n  prepare() {\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        this.simultaneousGestures,\n        this.requireGesturesToFail\n      );\n    }\n  }\n\n  initialize() {\n    for (const gesture of this.gestures) {\n      gesture.initialize();\n    }\n  }\n\n  toGestureArray(): GestureType[] {\n    return this.gestures.flatMap((gesture) => gesture.toGestureArray());\n  }\n}\n\nexport class SimultaneousGesture extends ComposedGesture {\n  prepare() {\n    const simultaneousArray = this.gestures\n      .flatMap((gesture) => gesture.toGestureArray())\n      .concat(this.simultaneousGestures);\n\n    for (const gesture of this.gestures) {\n      this.prepareSingleGesture(\n        gesture,\n        simultaneousArray,\n        this.requireGesturesToFail\n      );\n    }\n  }\n}\n\nexport class ExclusiveGesture extends ComposedGesture {\n  prepare() {\n    const gestureArrays = this.gestures.map((gesture) =>\n      gesture.toGestureArray()\n    );\n\n    let requireToFail: GestureType[] = [];\n\n    for (let i = 0; i < this.gestures.length; i++) {\n      this.prepareSingleGesture(\n        this.gestures[i],\n        this.simultaneousGestures,\n        this.requireGesturesToFail.concat(requireToFail)\n      );\n\n      requireToFail = requireToFail.concat(gestureArrays[i]);\n    }\n  }\n}\n\nexport type ComposedGestureType = InstanceType<typeof ComposedGesture>;\nexport type RaceGestureType = ComposedGestureType;\nexport type SimultaneousGestureType = InstanceType<typeof SimultaneousGesture>;\nexport type ExclusiveGestureType = InstanceType<typeof ExclusiveGesture>;\n"]},"metadata":{},"sourceType":"script"}