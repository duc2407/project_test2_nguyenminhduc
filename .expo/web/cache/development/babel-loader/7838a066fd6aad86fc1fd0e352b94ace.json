{"ast":null,"code":"Object.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar _exportNames = {\n  launchCamera: true,\n  launchImageLibrary: true\n};\nexports.launchCamera = launchCamera;\nexports.launchImageLibrary = launchImageLibrary;\nvar _reactNative = require(\"react-native\");\nvar _native = require(\"./platforms/native\");\nvar _web = require(\"./platforms/web\");\nvar _types = require(\"./types\");\nObject.keys(_types).forEach(function (key) {\n  if (key === \"default\" || key === \"__esModule\") return;\n  if (Object.prototype.hasOwnProperty.call(_exportNames, key)) return;\n  if (key in exports && exports[key] === _types[key]) return;\n  Object.defineProperty(exports, key, {\n    enumerable: true,\n    get: function get() {\n      return _types[key];\n    }\n  });\n});\nfunction launchCamera(options, callback) {\n  return _reactNative.Platform.OS === 'web' ? (0, _web.camera)(options, callback) : (0, _native.camera)(options, callback);\n}\nfunction launchImageLibrary(options, callback) {\n  return _reactNative.Platform.OS === 'web' ? (0, _web.imageLibrary)(options, callback) : (0, _native.imageLibrary)(options, callback);\n}","map":{"version":3,"names":["launchCamera","options","callback","Platform","OS","webCamera","nativeCamera","launchImageLibrary","webImageLibrary","nativeImageLibrary"],"sources":["D:/reactNative/test/node_modules/react-native-image-picker/src/index.ts"],"sourcesContent":["import {Platform} from 'react-native';\n\nimport {CameraOptions, ImageLibraryOptions, Callback} from './types';\nimport {\n  imageLibrary as nativeImageLibrary,\n  camera as nativeCamera,\n} from './platforms/native';\nimport {\n  imageLibrary as webImageLibrary,\n  camera as webCamera,\n} from './platforms/web';\n\nexport * from './types';\n\nexport function launchCamera(options: CameraOptions, callback?: Callback) {\n  return Platform.OS === 'web'\n    ? webCamera(options, callback)\n    : nativeCamera(options, callback);\n}\n\nexport function launchImageLibrary(\n  options: ImageLibraryOptions,\n  callback?: Callback,\n) {\n  return Platform.OS === 'web'\n    ? webImageLibrary(options, callback)\n    : nativeImageLibrary(options, callback);\n}\n"],"mappings":";;;;;;;;;AAAA;AAGA;AAIA;AAKA;AAAA;EAAA;EAAA;EAAA;EAAA;IAAA;IAAA;MAAA;IAAA;EAAA;AAAA;AAEO,SAASA,YAAY,CAACC,OAAsB,EAAEC,QAAmB,EAAE;EACxE,OAAOC,qBAAQ,CAACC,EAAE,KAAK,KAAK,GACxB,IAAAC,WAAS,EAACJ,OAAO,EAAEC,QAAQ,CAAC,GAC5B,IAAAI,cAAY,EAACL,OAAO,EAAEC,QAAQ,CAAC;AACrC;AAEO,SAASK,kBAAkB,CAChCN,OAA4B,EAC5BC,QAAmB,EACnB;EACA,OAAOC,qBAAQ,CAACC,EAAE,KAAK,KAAK,GACxB,IAAAI,iBAAe,EAACP,OAAO,EAAEC,QAAQ,CAAC,GAClC,IAAAO,oBAAkB,EAACR,OAAO,EAAEC,QAAQ,CAAC;AAC3C"},"metadata":{},"sourceType":"script"}