{"ast":null,"code":"var _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.createGestureHandler = createGestureHandler;\nexports.dropGestureHandler = dropGestureHandler;\nexports.getHandler = getHandler;\nexports.getNodes = getNodes;\nvar _extends2 = _interopRequireDefault(require(\"@babel/runtime/helpers/extends\"));\nvar gestures = {};\nfunction getHandler(tag) {\n  if (tag in gestures) return gestures[tag];\n  throw new Error(\"No handler for tag \" + tag);\n}\nfunction createGestureHandler(handlerTag, handler) {\n  if (handlerTag in gestures) {\n    throw new Error(\"Handler with tag \" + handlerTag + \" already exists\");\n  }\n  gestures[handlerTag] = handler;\n\n  gestures[handlerTag].handlerTag = handlerTag;\n}\nfunction dropGestureHandler(handlerTag) {\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n\n  delete gestures[handlerTag];\n}\nfunction getNodes() {\n  return (0, _extends2.default)({}, gestures);\n}","map":{"version":3,"mappings":";;;;;;;;;AAGA,IAAMA,QAGL,GAAG,EAHJ;AAKO,SAASC,UAAT,CAAoBC,GAApB,EAAiC;EACtC,IAAIA,GAAG,IAAIF,QAAX,EAAqB,OAAOA,QAAQ,CAACE,GAAD,CAAf;EAErB,MAAM,IAAIC,KAAJ,yBAAgCD,GAAI,CAA1C;AACD;AAEM,SAASE,oBAAT,CACLC,UADK,EAELC,OAFK,EAGL;EACA,IAAID,UAAU,IAAIL,QAAlB,EAA4B;IAC1B,MAAM,IAAIG,KAAJ,uBAA8BE,UAAW,qBAA/C;EACD;EACDL,QAAQ,CAACK,UAAD,CAAR,GAAuBC,OAAvB;;EAEAN,QAAQ,CAACK,UAAD,CAAR,CAAqBA,UAArB,GAAkCA,UAAlC;AACD;AAEM,SAASE,kBAAT,CAA4BF,UAA5B,EAAgD;EAGrD,IAAI,EAAEA,UAAU,IAAIL,QAAhB,CAAJ,EAA+B;IAC7B;EACD;EACDC,UAAU,CAACI,UAAD,CAAV,CAAuBG,OAAvB;;EAEA,OAAOR,QAAQ,CAACK,UAAD,CAAf;AACD;AAEM,SAASI,QAAT,GAAoB;EACzB,kCAAYT;AACb","names":["gestures","getHandler","tag","Error","createGestureHandler","handlerTag","handler","dropGestureHandler","destroy","getNodes"],"sources":["NodeManager.ts"],"sourcesContent":["import { ValueOf } from '../typeUtils';\nimport { HammerGestures } from '../RNGestureHandlerModule.web';\n\nconst gestures: Record<\n  number,\n  InstanceType<ValueOf<typeof HammerGestures>>\n> = {};\n\nexport function getHandler(tag: number) {\n  if (tag in gestures) return gestures[tag];\n\n  throw new Error(`No handler for tag ${tag}`);\n}\n\nexport function createGestureHandler(\n  handlerTag: number,\n  handler: InstanceType<ValueOf<typeof HammerGestures>>\n) {\n  if (handlerTag in gestures) {\n    throw new Error(`Handler with tag ${handlerTag} already exists`);\n  }\n  gestures[handlerTag] = handler;\n  // @ts-ignore no types for web handlers yet\n  gestures[handlerTag].handlerTag = handlerTag;\n}\n\nexport function dropGestureHandler(handlerTag: number) {\n  // Since React 18, there are cases where componentWillUnmount gets called twice in a row\n  // so skip this if the tag was already removed.\n  if (!(handlerTag in gestures)) {\n    return;\n  }\n  getHandler(handlerTag).destroy();\n  // eslint-disable-next-line @typescript-eslint/no-dynamic-delete\n  delete gestures[handlerTag];\n}\n\nexport function getNodes() {\n  return { ...gestures };\n}\n"]},"metadata":{},"sourceType":"script"}